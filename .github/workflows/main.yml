name: Deploy to ECS (Production)

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: ${{ (github.ref == 'refs/heads/main' && 'main') }}
    steps:
      # see: https://github.com/aws-actions/configure-aws-credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
          aws-region: us-east-1
  
      # see: https://github.com/aws-actions/amazon-ecr-login
      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      
      - name: Checkout code
        uses: actions/checkout@v2 
      
      - name: Creation of .env file
        run: |
          echo TEST=TEST >> .env

      # Set up QEMU for cross-platform builds
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      
      # Set up Docker Buildx with a driver that supports multi-platform builds
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: image=moby/buildkit:latest
          buildkitd-flags: --debug
      
      # Build and push the ARM64 image
      - name: Build and push ARM64 image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          platforms: linux/arm64
          tags: ${{ steps.login-ecr.outputs.registry }}/${{ vars.ECR_REPOSITORY_PROD }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy to ECS
        run: |
          aws ecs update-service --cluster ${{ vars.ECS_CLUSTER_PROD }} --service ${{ vars.ECS_SERVICE_PROD }} --force-new-deployment
  
      - name: Log out of Amazon ECR
        if: always()
        run: docker logout ${{ steps.login-ecr.outputs.registry }}